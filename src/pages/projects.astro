---
import Layout from '../layouts/Layout.astro';
import { personalInfo } from '../utils/personal';
import Window from '../components/Window.astro';
import ProjectCard from '../components/ProjectCard.astro';
import Dock from '../components/Dock.astro';
import ProjectListItem from '../components/ProjectListItem.astro';

// Extended project data - this will be replaced with dynamic data later
const projects = [
  {
    title: "E-Commerce Platform",
    description: "A full-featured e-commerce platform with user authentication, payment processing, and admin dashboard. Built with modern web technologies for optimal performance.",
    image: "/api/placeholder/400/300",
    technologies: ["React", "Node.js", "MongoDB", "Stripe", "JWT"],
    githubUrl: "https://github.com",
    liveUrl: "https://example.com",
    category: "Web Development"
  },
  {
    title: "Mobile Task Manager", 
    description: "Cross-platform mobile application for task management with real-time synchronization, offline support, and collaborative features.",
    image: "/api/placeholder/400/300",
    technologies: ["React Native", "Firebase", "Redux", "TypeScript"],
    githubUrl: "https://github.com",
    liveUrl: "https://app-store-link.com",
    category: "Mobile Development"
  },
  {
    title: "Data Analytics Dashboard",
    description: "Interactive dashboard for data visualization with real-time charts, filtering capabilities, and export functionality.",
    image: "/api/placeholder/400/300",
    technologies: ["Vue.js", "D3.js", "Python", "FastAPI", "PostgreSQL"],
    githubUrl: "https://github.com",
    liveUrl: "https://example.com",
    category: "Data Science"
  },
  {
    title: "AI-Powered Chatbot",
    description: "Intelligent chatbot with natural language processing capabilities, integrated with multiple platforms and APIs.",
    image: "/api/placeholder/400/300",
    technologies: ["Python", "TensorFlow", "FastAPI", "Redis", "Docker"],
    githubUrl: "https://github.com",
    category: "Machine Learning"
  },
  {
    title: "Portfolio Website",
    description: "Modern, responsive portfolio website with dynamic content management and optimized performance.",
    image: "/api/placeholder/400/300",
    technologies: ["Astro", "Tailwind CSS", "TypeScript", "MDX"],
    githubUrl: "https://github.com",
    liveUrl: "https://example.com",
    category: "Web Development"
  },
  {
    title: "Weather App",
    description: "Beautiful weather application with location-based forecasts, interactive maps, and weather alerts.",
    image: "/api/placeholder/400/300",
    technologies: ["React", "Weather API", "Mapbox", "CSS3"],
    githubUrl: "https://github.com",
    liveUrl: "https://example.com",
    category: "Web Development"
  }
];

const dockItems = [
  { name: "About", icon: "👤", href: "/#about" },
  { name: "Projects", icon: "💼", href: "/projects", isActive: true },
  { name: "Skills", icon: "🛠️", href: "/#skills" },
  { name: 'Figma', icon: '🧩', href: '/figma', alignRight: true },
  { name: "Shots", icon: "🎨", href: "/dribbble", alignRight: true },
  { name: "Contact", icon: "📧", href: "/#contact" }
];

// Group projects by category
const projectsByCategory = projects.reduce((acc, project) => {
  const category = project.category || 'Other';
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(project);
  return acc;
}, {} as Record<string, typeof projects>);
---

<Layout title="Projects - Your Name">
  <main class="min-h-screen bg-gradient-to-br from-macos-blue-500/5 to-macos-gray-100 dark:from-macos-gray-900 dark:to-macos-gray-800">
    <!-- Header -->
    <section class="pt-20 pb-6 px-6">
      <div class="max-w-6xl mx-auto">
        <div class="flex flex-col items-center gap-6">
          <div class="text-center">
            <h1 class="text-5xl md:text-6xl font-bold text-macos-gray-900 dark:text-white mb-3">
              My Projects
            </h1>
            <p class="text-xl text-macos-gray-600 dark:text-macos-gray-400 max-w-2xl mx-auto">
              A collection of my work showcasing various technologies and problem-solving approaches
            </p>
          </div>

          <!-- View Toggle -->
          <div class="flex items-center gap-2 bg-white/70 dark:bg-macos-gray-800/70 backdrop-blur-macos border border-white/30 dark:border-macos-gray-700/40 rounded-macos px-2 py-1 shadow-macos" id="view-toggle" role="group" aria-label="Toggle project view">
            <button type="button" class="view-btn grid-view active inline-flex items-center gap-2 px-3 py-1.5 rounded-md text-sm text-macos-gray-800 dark:text-macos-gray-100 hover:bg-macos-gray-100 dark:hover:bg-macos-gray-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-macos-blue-500" aria-pressed="true" data-view="grid">
              <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M3 3h8v8H3V3zm10 0h8v8h-8V3zM3 13h8v8H3v-8zm10 0h8v8h-8v-8z"/></svg>
              Grid
            </button>
            <button type="button" class="view-btn list-view inline-flex items-center gap-2 px-3 py-1.5 rounded-md text-sm text-macos-gray-700 dark:text-macos-gray-300 hover:bg-macos-gray-100 dark:hover:bg-macos-gray-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-macos-blue-500" aria-pressed="false" data-view="list">
              <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M4 6h16v2H4V6zm0 5h16v2H4v-2zm0 5h16v2H4v-2z"/></svg>
              List
            </button>
          </div>
        </div>
      </div>
    </section>

    <!-- Projects by Category -->
    {Object.entries(projectsByCategory).map(([category, categoryProjects]) => (
      <section class="py-8 px-6">
        <div class="max-w-6xl mx-auto">
          <Window title={category} class="mb-8">
            <!-- Grid View -->
            <div class="projects-grid grid md:grid-cols-2 lg:grid-cols-3 gap-6" data-view-section="grid">
              {categoryProjects.map((project) => (
                <ProjectCard {...project} />
              ))}
            </div>
            <!-- List View -->
            <div class="projects-list hidden flex-col gap-2" data-view-section="list">
              {categoryProjects.map((project) => (
                <ProjectListItem {...project} />
              ))}
            </div>
          </Window>
        </div>
      </section>
    ))}

    <!-- Call to Action -->
    <section class="py-20 px-6">
      <div class="max-w-6xl mx-auto">
        <Window title="Interested in Working Together?" class="max-w-2xl mx-auto">
          <div class="text-center">
            <p class="text-macos-gray-600 dark:text-macos-gray-400 mb-8">
              I'm always excited to work on new projects and collaborate with other developers. 
              Let's build something amazing together!
            </p>
            
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
              <a 
                href="/#contact" 
                class="bg-macos-blue-500 hover:bg-macos-blue-600 text-white px-8 py-3 rounded-macos font-medium transition-colors shadow-macos inline-flex items-center justify-center"
              >
                Get In Touch
              </a>
              
              <a 
                href={personalInfo.github} 
                target="_blank"
                rel="noopener noreferrer"
                class="bg-white/80 dark:bg-macos-gray-800/80 backdrop-blur-macos border border-white/30 dark:border-macos-gray-700/50 text-macos-gray-900 dark:text-white px-8 py-3 rounded-macos font-medium transition-colors hover:bg-white/90 dark:hover:bg-macos-gray-800/90 inline-flex items-center justify-center"
              >
                <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0C5.374 0 0 5.373 0 12 0 17.302 3.438 21.8 8.207 23.387c.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
                </svg>
                View on GitHub
              </a>
            </div>
          </div>
        </Window>
      </div>
    </section>

    <!-- Navigation Back -->
    <div class="fixed top-6 left-6 z-50">
      <a 
        href="/" 
        class="bg-white/80 dark:bg-macos-gray-800/80 backdrop-blur-macos border border-white/30 dark:border-macos-gray-700/50 text-macos-gray-900 dark:text-white p-3 rounded-macos font-medium transition-colors hover:bg-white/90 dark:hover:bg-macos-gray-800/90 inline-flex items-center"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
        </svg>
        Back to Home
      </a>
    </div>

    <!-- Dock Navigation -->
    <Dock items={dockItems} />
  </main>
</Layout>

<script>
  // @ts-nocheck
  const STORAGE_KEY = 'projects:view';
  function applyView(view) {
    const isGrid = view === 'grid';
    document.querySelectorAll('[data-view-section="grid"]').forEach(el => {
      el.classList.toggle('hidden', !isGrid);
    });
    document.querySelectorAll('[data-view-section="list"]').forEach(el => {
      el.classList.toggle('hidden', isGrid);
      el.classList.toggle('flex', !isGrid);
    });
    const gridBtn = document.querySelector('#view-toggle .grid-view');
    const listBtn = document.querySelector('#view-toggle .list-view');
    if (gridBtn && listBtn) {
      gridBtn.classList.toggle('active', isGrid);
      listBtn.classList.toggle('active', !isGrid);
      gridBtn.setAttribute('aria-pressed', String(isGrid));
      listBtn.setAttribute('aria-pressed', String(!isGrid));
      gridBtn.classList.toggle('text-macos-gray-800', isGrid);
      gridBtn.classList.toggle('dark:text-macos-gray-100', isGrid);
      listBtn.classList.toggle('text-macos-gray-800', !isGrid);
      listBtn.classList.toggle('dark:text-macos-gray-100', !isGrid);
    }
  }
  document.addEventListener('DOMContentLoaded', () => {
    const initial = localStorage.getItem(STORAGE_KEY) || 'grid';
    applyView(initial);
    document.querySelectorAll('#view-toggle .view-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const view = btn.getAttribute('data-view');
        if (!view) return;
        localStorage.setItem(STORAGE_KEY, view);
        applyView(view);
      });
    });
  });
</script>
