---
import Layout from '../layouts/Layout.astro';
import Window from '../components/Window.astro';
---

<Layout title="Admin Dashboard - Portfolio Manager">
  <main class="min-h-screen bg-gradient-to-br from-macos-blue-500/5 to-macos-gray-100 dark:from-macos-gray-900 dark:to-macos-gray-800">
    <!-- Header -->
    <section class="pt-20 pb-8 px-6">
      <div class="max-w-6xl mx-auto">
        <div class="flex justify-between items-center mb-8">
          <div>
            <h1 class="text-4xl md:text-5xl font-bold text-macos-gray-900 dark:text-white mb-2">
              Portfolio Dashboard
            </h1>
            <p class="text-lg text-macos-gray-600 dark:text-macos-gray-400">
              Manage your projects and portfolio settings
            </p>
          </div>
          
          <div class="flex gap-3">
            <button 
              id="new-project-btn"
              class="bg-macos-blue-500 hover:bg-macos-blue-600 text-white px-6 py-3 rounded-macos font-medium transition-colors shadow-macos"
            >
              + New Project
            </button>
            
            <a 
              href="/" 
              class="bg-white/80 dark:bg-macos-gray-800/80 backdrop-blur-macos border border-white/30 dark:border-macos-gray-700/50 text-macos-gray-900 dark:text-white px-6 py-3 rounded-macos font-medium transition-colors hover:bg-white/90 dark:hover:bg-macos-gray-800/90"
            >
              View Portfolio
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Dashboard Content -->
    <section class="px-6 pb-20">
      <div class="max-w-6xl mx-auto">
        <!-- Stats Overview -->
        <div class="grid md:grid-cols-4 gap-6 mb-8">
          <div class="bg-white/80 dark:bg-macos-gray-800/80 backdrop-blur-macos border border-white/30 dark:border-macos-gray-700/50 rounded-macos p-6 text-center">
            <div class="text-2xl font-bold text-macos-blue-500" id="total-projects">0</div>
            <div class="text-sm text-macos-gray-600 dark:text-macos-gray-400">Total Projects</div>
          </div>
          
          <div class="bg-white/80 dark:bg-macos-gray-800/80 backdrop-blur-macos border border-white/30 dark:border-macos-gray-700/50 rounded-macos p-6 text-center">
            <div class="text-2xl font-bold text-macos-green-500" id="published-projects">0</div>
            <div class="text-sm text-macos-gray-600 dark:text-macos-gray-400">Published</div>
          </div>
          
          <div class="bg-white/80 dark:bg-macos-gray-800/80 backdrop-blur-macos border border-white/30 dark:border-macos-gray-700/50 rounded-macos p-6 text-center">
            <div class="text-2xl font-bold text-macos-yellow-500" id="draft-projects">0</div>
            <div class="text-sm text-macos-gray-600 dark:text-macos-gray-400">Drafts</div>
          </div>
          
          <div class="bg-white/80 dark:bg-macos-gray-800/80 backdrop-blur-macos border border-white/30 dark:border-macos-gray-700/50 rounded-macos p-6 text-center">
            <div class="text-2xl font-bold text-macos-blue-500" id="featured-projects">0</div>
            <div class="text-sm text-macos-gray-600 dark:text-macos-gray-400">Featured</div>
          </div>
        </div>

        <!-- Projects Management -->
        <Window title="Project Management" class="mb-8">
          <div class="mb-6 flex flex-col sm:flex-row gap-4">
            <input 
              type="text" 
              id="search-projects"
              placeholder="Search projects..."
              class="flex-1 px-4 py-2 border border-macos-gray-300 dark:border-macos-gray-600 rounded-macos bg-white/50 dark:bg-macos-gray-700/50 focus:outline-none focus:ring-2 focus:ring-macos-blue-500"
            >
            
            <select 
              id="filter-category"
              class="px-4 py-2 border border-macos-gray-300 dark:border-macos-gray-600 rounded-macos bg-white/50 dark:bg-macos-gray-700/50 focus:outline-none focus:ring-2 focus:ring-macos-blue-500"
            >
              <option value="">All Categories</option>
              <option value="Web Development">Web Development</option>
              <option value="Mobile Development">Mobile Development</option>
              <option value="Data Science">Data Science</option>
              <option value="Machine Learning">Machine Learning</option>
              <option value="Design">Design</option>
              <option value="DevOps">DevOps</option>
              <option value="Other">Other</option>
            </select>
            
            <select 
              id="filter-status"
              class="px-4 py-2 border border-macos-gray-300 dark:border-macos-gray-600 rounded-macos bg-white/50 dark:bg-macos-gray-700/50 focus:outline-none focus:ring-2 focus:ring-macos-blue-500"
            >
              <option value="">All Status</option>
              <option value="published">Published</option>
              <option value="draft">Draft</option>
              <option value="archived">Archived</option>
            </select>
          </div>
          
          <div id="projects-list" class="space-y-4">
            <!-- Projects will be loaded here -->
          </div>
          
          <div id="no-projects" class="text-center py-12 hidden">
            <div class="text-6xl mb-4">üìÅ</div>
            <h3 class="text-xl font-semibold text-macos-gray-900 dark:text-white mb-2">No Projects Yet</h3>
            <p class="text-macos-gray-600 dark:text-macos-gray-400 mb-6">Create your first project to get started!</p>
            <button 
              class="bg-macos-blue-500 hover:bg-macos-blue-600 text-white px-6 py-3 rounded-macos font-medium transition-colors shadow-macos new-project-trigger"
            >
              Create First Project
            </button>
          </div>
        </Window>

        <!-- Portfolio Settings -->
        <Window title="Portfolio Settings">
          <form id="portfolio-settings-form" class="space-y-6">
            <div class="grid md:grid-cols-2 gap-6">
              <div>
                <label class="block text-sm font-medium text-macos-gray-700 dark:text-macos-gray-300 mb-2">
                  Portfolio Title
                </label>
                <input 
                  type="text" 
                  id="portfolio-title"
                  name="title"
                  placeholder="Your Portfolio Title"
                  class="w-full px-4 py-2 border border-macos-gray-300 dark:border-macos-gray-600 rounded-macos bg-white/50 dark:bg-macos-gray-700/50 focus:outline-none focus:ring-2 focus:ring-macos-blue-500"
                >
              </div>
              
              <div>
                <label class="block text-sm font-medium text-macos-gray-700 dark:text-macos-gray-300 mb-2">
                  Custom URL
                </label>
                <input 
                  type="text" 
                  id="custom-url"
                  name="customUrl"
                  placeholder="my-awesome-portfolio"
                  class="w-full px-4 py-2 border border-macos-gray-300 dark:border-macos-gray-600 rounded-macos bg-white/50 dark:bg-macos-gray-700/50 focus:outline-none focus:ring-2 focus:ring-macos-blue-500"
                >
                <p class="text-xs text-macos-gray-500 mt-1">Leave empty for auto-generated URL</p>
              </div>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-macos-gray-700 dark:text-macos-gray-300 mb-2">
                Portfolio Description
              </label>
              <textarea 
                id="portfolio-description"
                name="description"
                rows="3"
                placeholder="Brief description of your portfolio"
                class="w-full px-4 py-2 border border-macos-gray-300 dark:border-macos-gray-600 rounded-macos bg-white/50 dark:bg-macos-gray-700/50 focus:outline-none focus:ring-2 focus:ring-macos-blue-500"
              ></textarea>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-macos-gray-700 dark:text-macos-gray-300 mb-2">
                Bio / About Section
              </label>
              <textarea 
                id="portfolio-bio"
                name="bio"
                rows="4"
                placeholder="Tell visitors about yourself and your work"
                class="w-full px-4 py-2 border border-macos-gray-300 dark:border-macos-gray-600 rounded-macos bg-white/50 dark:bg-macos-gray-700/50 focus:outline-none focus:ring-2 focus:ring-macos-blue-500"
              ></textarea>
            </div>
            
            <div class="flex justify-between items-center pt-4">
              <div class="flex items-center space-x-4">
                <button 
                  type="button" 
                  id="preview-portfolio"
                  class="bg-white/80 dark:bg-macos-gray-800/80 backdrop-blur-macos border border-white/30 dark:border-macos-gray-700/50 text-macos-gray-900 dark:text-white px-6 py-2 rounded-macos font-medium transition-colors hover:bg-white/90 dark:hover:bg-macos-gray-800/90"
                >
                  Preview
                </button>
                
                <button 
                  type="submit"
                  class="bg-macos-blue-500 hover:bg-macos-blue-600 text-white px-6 py-2 rounded-macos font-medium transition-colors"
                >
                  Save Settings
                </button>
              </div>
              
              <button 
                type="button" 
                id="publish-portfolio"
                class="bg-macos-green-500 hover:bg-macos-green-600 text-white px-6 py-2 rounded-macos font-medium transition-colors"
              >
                Publish Portfolio
              </button>
            </div>
          </form>
        </Window>
      </div>
    </section>

    <!-- Project Modal -->
    <div id="project-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
      <div class="flex items-center justify-center min-h-screen p-6">
        <div class="bg-white dark:bg-macos-gray-800 rounded-macos-lg shadow-macos-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto">
          <!-- Modal content will be loaded here -->
        </div>
      </div>
    </div>

    <!-- Confirmation Modal -->
    <div id="confirm-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
      <div class="flex items-center justify-center min-h-screen p-6">
        <div class="bg-white dark:bg-macos-gray-800 rounded-macos-lg shadow-macos-lg max-w-md w-full p-6">
          <h3 class="text-lg font-semibold text-macos-gray-900 dark:text-white mb-4" id="confirm-title">
            Confirm Action
          </h3>
          <p class="text-macos-gray-600 dark:text-macos-gray-400 mb-6" id="confirm-message">
            Are you sure you want to proceed?
          </p>
          <div class="flex justify-end space-x-3">
            <button 
              id="confirm-cancel"
              class="px-4 py-2 text-macos-gray-600 dark:text-macos-gray-400 hover:text-macos-gray-800 dark:hover:text-macos-gray-200"
            >
              Cancel
            </button>
            <button 
              id="confirm-action"
              class="bg-macos-red-500 hover:bg-macos-red-600 text-white px-4 py-2 rounded-macos font-medium transition-colors"
            >
              Delete
            </button>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script>
    import { portfolioStore } from '../utils/dataStore';
    import type { Project } from '../types';

    // Global state
    let currentProjects: Project[] = [];
    let editingProject: Project | null = null;

    // Initialize dashboard
    document.addEventListener('DOMContentLoaded', () => {
      loadDashboard();
      bindEventListeners();
    });

    function loadDashboard() {
      loadStats();
      loadProjects();
      loadPortfolioSettings();
    }

    function loadStats() {
      const projects = portfolioStore.getAllProjects();
      const published = projects.filter(p => p.status === 'published');
      const drafts = projects.filter(p => p.status === 'draft');
      const featured = projects.filter(p => p.featured);

      document.getElementById('total-projects')!.textContent = projects.length.toString();
      document.getElementById('published-projects')!.textContent = published.length.toString();
      document.getElementById('draft-projects')!.textContent = drafts.length.toString();
      document.getElementById('featured-projects')!.textContent = featured.length.toString();
    }

    function loadProjects() {
      currentProjects = portfolioStore.getAllProjects();
      renderProjects(currentProjects);
    }

    function renderProjects(projects: Project[]) {
      const container = document.getElementById('projects-list')!;
      const noProjects = document.getElementById('no-projects')!;

      if (projects.length === 0) {
        container.classList.add('hidden');
        noProjects.classList.remove('hidden');
        return;
      }

      container.classList.remove('hidden');
      noProjects.classList.add('hidden');

      container.innerHTML = projects.map(project => `
        <div class="bg-white/60 dark:bg-macos-gray-700/60 backdrop-blur-macos border border-white/30 dark:border-macos-gray-600/30 rounded-macos p-6">
          <div class="flex items-start justify-between mb-4">
            <div class="flex-1">
              <div class="flex items-center gap-3 mb-2">
                <h3 class="text-lg font-semibold text-macos-gray-900 dark:text-white">${project.title}</h3>
                <span class="px-2 py-1 text-xs rounded-md ${getStatusBadgeClass(project.status)}">${project.status}</span>
                ${project.featured ? '<span class="px-2 py-1 text-xs bg-macos-yellow-100 text-macos-yellow-800 rounded-md">Featured</span>' : ''}
              </div>
              <p class="text-macos-gray-600 dark:text-macos-gray-400 mb-3">${project.description}</p>
              <div class="flex flex-wrap gap-2 mb-3">
                ${project.technologies.map(tech => `<span class="px-2 py-1 text-xs bg-macos-gray-100 dark:bg-macos-gray-600 text-macos-gray-700 dark:text-macos-gray-300 rounded-md">${tech}</span>`).join('')}
              </div>
              <p class="text-sm text-macos-gray-500">Category: ${project.category}</p>
            </div>
          </div>
          
          <div class="flex items-center justify-between">
            <div class="text-sm text-macos-gray-500">
              Created: ${new Date(project.createdAt).toLocaleDateString()}
            </div>
            <div class="flex items-center space-x-2">
              <button 
                onclick="editProject('${project.id}')"
                class="px-3 py-1 text-sm bg-macos-blue-500 text-white rounded-md hover:bg-macos-blue-600 transition-colors"
              >
                Edit
              </button>
              ${project.status === 'draft' ? `
                <button 
                  onclick="publishProject('${project.id}')"
                  class="px-3 py-1 text-sm bg-macos-green-500 text-white rounded-md hover:bg-macos-green-600 transition-colors"
                >
                  Publish
                </button>
              ` : ''}
              <button 
                onclick="deleteProject('${project.id}')"
                class="px-3 py-1 text-sm bg-macos-red-500 text-white rounded-md hover:bg-macos-red-600 transition-colors"
              >
                Delete
              </button>
            </div>
          </div>
        </div>
      `).join('');
    }

    function getStatusBadgeClass(status: string): string {
      switch (status) {
        case 'published':
          return 'bg-macos-green-100 text-macos-green-800';
        case 'draft':
          return 'bg-macos-yellow-100 text-macos-yellow-800';
        case 'archived':
          return 'bg-macos-gray-100 text-macos-gray-800';
        default:
          return 'bg-macos-gray-100 text-macos-gray-800';
      }
    }

    function loadPortfolioSettings() {
      const portfolio = portfolioStore.getPortfolio();
      if (portfolio) {
        (document.getElementById('portfolio-title') as HTMLInputElement).value = portfolio.title || '';
        (document.getElementById('custom-url') as HTMLInputElement).value = portfolio.customUrl || '';
        (document.getElementById('portfolio-description') as HTMLTextAreaElement).value = portfolio.description || '';
        (document.getElementById('portfolio-bio') as HTMLTextAreaElement).value = portfolio.bio || '';
      }
    }

    function bindEventListeners() {
      // New project button
      document.getElementById('new-project-btn')?.addEventListener('click', () => openProjectModal());
      document.querySelectorAll('.new-project-trigger').forEach(btn => {
        btn.addEventListener('click', () => openProjectModal());
      });

      // Search and filter
      document.getElementById('search-projects')?.addEventListener('input', filterProjects);
      document.getElementById('filter-category')?.addEventListener('change', filterProjects);
      document.getElementById('filter-status')?.addEventListener('change', filterProjects);

      // Portfolio settings
      document.getElementById('portfolio-settings-form')?.addEventListener('submit', savePortfolioSettings);
      document.getElementById('preview-portfolio')?.addEventListener('click', previewPortfolio);
      document.getElementById('publish-portfolio')?.addEventListener('click', publishPortfolio);

      // Modal events
      document.getElementById('project-modal')?.addEventListener('click', (e) => {
        if (e.target === e.currentTarget) closeModal('project-modal');
      });

      document.getElementById('confirm-modal')?.addEventListener('click', (e) => {
        if (e.target === e.currentTarget) closeModal('confirm-modal');
      });

      document.getElementById('confirm-cancel')?.addEventListener('click', () => closeModal('confirm-modal'));
    }

    function filterProjects() {
      const searchTerm = (document.getElementById('search-projects') as HTMLInputElement).value.toLowerCase();
      const categoryFilter = (document.getElementById('filter-category') as HTMLSelectElement).value;
      const statusFilter = (document.getElementById('filter-status') as HTMLSelectElement).value;

      let filteredProjects = currentProjects;

      if (searchTerm) {
        filteredProjects = filteredProjects.filter(project =>
          project.title.toLowerCase().includes(searchTerm) ||
          project.description.toLowerCase().includes(searchTerm) ||
          project.technologies.some(tech => tech.toLowerCase().includes(searchTerm))
        );
      }

      if (categoryFilter) {
        filteredProjects = filteredProjects.filter(project => project.category === categoryFilter);
      }

      if (statusFilter) {
        filteredProjects = filteredProjects.filter(project => project.status === statusFilter);
      }

      renderProjects(filteredProjects);
    }

    // Make functions globally available
    (window as any).editProject = editProject;
    (window as any).deleteProject = deleteProject;
    (window as any).publishProject = publishProject;

    function editProject(id: string) {
      editingProject = portfolioStore.getProject(id);
      if (editingProject) {
        openProjectModal(editingProject);
      }
    }

    function deleteProject(id: string) {
      const project = portfolioStore.getProject(id);
      if (project) {
        showConfirmModal(
          'Delete Project',
          `Are you sure you want to delete "${project.title}"? This action cannot be undone.`,
          () => {
            if (portfolioStore.deleteProject(id)) {
              loadDashboard();
              closeModal('confirm-modal');
            }
          }
        );
      }
    }

    function publishProject(id: string) {
      if (portfolioStore.publishProject(id)) {
        loadDashboard();
      }
    }

    function openProjectModal(project?: Project) {
      // Modal implementation would go here
      // For now, just show an alert
      alert(`Project modal would open here${project ? ` for editing ${project.title}` : ' for creating new project'}`);
    }

    function closeModal(modalId: string) {
      document.getElementById(modalId)?.classList.add('hidden');
    }

    function showConfirmModal(title: string, message: string, onConfirm: () => void) {
      document.getElementById('confirm-title')!.textContent = title;
      document.getElementById('confirm-message')!.textContent = message;
      
      const confirmBtn = document.getElementById('confirm-action')!;
      confirmBtn.onclick = onConfirm;
      
      document.getElementById('confirm-modal')?.classList.remove('hidden');
    }

    function savePortfolioSettings(e: Event) {
      e.preventDefault();
      
      const formData = new FormData(e.target as HTMLFormElement);
      const data = {
        title: formData.get('title') as string,
        description: formData.get('description') as string,
        bio: formData.get('bio') as string,
        customUrl: formData.get('customUrl') as string,
        contactInfo: {} // Would be expanded with contact form
      };

      const portfolio = portfolioStore.getPortfolio();
      if (portfolio) {
        portfolioStore.updatePortfolio(data);
      } else {
        portfolioStore.createPortfolio(data);
      }

      // Show success message
      alert('Portfolio settings saved successfully!');
    }

    function previewPortfolio() {
      window.open('/', '_blank');
    }

    function publishPortfolio() {
      if (portfolioStore.publishPortfolio()) {
        alert('Portfolio published successfully!');
      }
    }
  </script>
</Layout>
